C51 COMPILER V9.01   MAIN                                                                  06/27/2025 23:03:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE INCDIR(.\OLED;.\ADC) DEBUG OBJECTEXTEND

line level    source

   1          #include<oled.h>
   2          #include <STC8H.H>
   3          #include <intrins.h>
   4          #include "adc.h"
   5          #include <math.h>
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          
   9          sbit INPUT= P1^6  ;
  10          sbit OUTPUT = P1^7       ;
  11          sbit testkey = P3^2;  
  12          unsigned int num = 0;
  13          unsigned char time_out = 0;
  14          /* 宏定义 */
  15          #define SOUND_VELOCITY 34300  // 声速 (cm/s)
  16           #define PERIOD_US 1.085e-6  // 系统时钟频率 (Hz)
  17          #define CLOCK_PERIOD PERIOD_US
  18          float Get_Time_ms() {
  19   1          unsigned int t = ((unsigned int)TH0 << 8) | TL0;
  20   1          return t / 1000.0f;  // 以毫秒为单位返回
  21   1      }
  22          void Timer0_Init(void) {
  23   1          TMOD &= 0xF0;  // 清除定时器0模式位
  24   1          TMOD |= 0x01;  // 定时器0设置为模式1（16位）
  25   1          TR0 = 0;       // 停止定时器
  26   1          TF0 = 0; 
  27   1              ET0 = 0;      // 清除溢出标志
  28   1      }
  29          void Start_Timer() {
  30   1          TH0 = 0;            // 高8位清零
  31   1          TL0 = 0;            // 低8位清零
  32   1          TF0 = 0;            // 清中断标志
  33   1          TR0 = 1;            // 启动定时器
  34   1      }
  35          void Stop_Timer() {
  36   1          TR0 = 0;            // 关闭定时器
  37   1      }
  38          unsigned int Get_Timer_Value() {
  39   1          unsigned int t0;
  40   1          t0 = ((unsigned int)TH0 << 8) | TL0;  // 获取当前 Timer0 计数值（单位：us）
  41   1          return t0 ;   // 返回16位当前计数值，单位为微秒（us）
  42   1      }
  43          
  44          void start_project(void)
  45          {            OLED_ShowChinese(28,0,9,12);//显示”电"
  46   1                       OLED_ShowChinese(42,0,10,12);//显示”路“
  47   1                       OLED_ShowChinese(56,0,11,12);//显示”黑”
  48   1                       OLED_ShowChinese(68,0,12,12);//显示”箱 “
  49   1                       OLED_ShowChinese(80,0,13,12);//显示”测
  50   1                       OLED_ShowChinese(92,0,14,12);//显示”试”
  51   1                       OLED_ShowChinese(104,0,15,12);//显示”仪“      
  52   1               OLED_ShowChinese(0,2,0,12);//显示”杨"
  53   1                       OLED_ShowChinese(14,2,1,12);//显示”宇“
  54   1                       OLED_ShowChinese(28,2,2,12);//显示”非”
  55   1                       OLED_ShowString(60,2,"23211336",8); 
C51 COMPILER V9.01   MAIN                                                                  06/27/2025 23:03:34 PAGE 2   

  56   1                       OLED_ShowChinese(0,4,3,12);//显示”高 “
  57   1                       OLED_ShowChinese(14,4,4,12);//显示”若
  58   1                       OLED_ShowChinese(28,4,5,12);//显示”恒”
  59   1                       OLED_ShowString(60,4,"23211290",8);
  60   1                       OLED_ShowChinese(0,6,6,12);//显示”汪“
  61   1                       OLED_ShowChinese(14,6,7,12);//显示”超”
  62   1                       OLED_ShowChinese(28,6,8,12);//显示”然“
  63   1                       OLED_ShowString(60,6,"23211301",8);
  64   1                       delay_ms(2000);
  65   1                       OLED_Clear();           
  66   1      }
  67          void Generate_Step_Signal()
  68          {                  INPUT = 1 ;
  69   1                 delay_ms(2000);
  70   1                          INPUT = 0;
  71   1      
  72   1      }
  73          
  74          
  75           void system_init()
  76           {        P1M0 = 0x00;  // 设置 P1 为准双向口（传统 51 模式）
  77   1          P1M1 = 0x00;
  78   1              P3M0 &= ~(1 << 2);  // M0.2 = 0
  79   1          P3M1 &= ~(1 << 2);  // M1.2 = 0
  80   1              Timer0_Init();
  81   1                testkey= 1;
  82   1                INPUT =0;
  83   1                OUTPUT =0;
  84   1               ADC_Init();  
  85   1       }
  86          
  87          
  88           unsigned int keypressed()                      //检测按键状态
  89           {               
  90   1              unsigned int key_Flag=0;
  91   1         if (testkey == 0) {         // 检测按键按下（低电平）
  92   2              delay_ms(20);           // 简单消抖
  93   2              if (testkey == 0) {
  94   3                  if (!key_Flag) {
  95   4                      key_Flag = 1;   // 设置按键已按下标志
  96   4                      return 1;       // 第一次检测到按下，返回1
  97   4                  }
  98   3              }
  99   2          } else {
 100   2              key_Flag = 0;           // 松开按键后，复位标志位
 101   2          }
 102   1              return 0;
 103   1       }
 104           void box_sort(float tau,float v0,float v_inf)
 105           {
 106   1       }
*** WARNING C280 IN LINE 104 OF MAIN.C: 'tau': unreferenced local variable
*** WARNING C280 IN LINE 104 OF MAIN.C: 'v0': unreferenced local variable
*** WARNING C280 IN LINE 104 OF MAIN.C: 'v_inf': unreferenced local variable
 107          void Start_BlackBox_Test()
 108          {                  unsigned int adc_val;
 109   1                 float v0, v_inf, vt, v_target;
 110   1                 float tau = 0;
 111   1                 float t_ms = 0;
 112   1                         Generate_Step_Signal() ;
 113   1                         delay_us(50);               // 等待上升沿稳定
 114   1      
C51 COMPILER V9.01   MAIN                                                                  06/27/2025 23:03:34 PAGE 3   

 115   1          // === 2. 采样初始电压 v0 ===
 116   1                  adc_val = ADC_Read(0);
 117   1                  v0 = ADC_ToVoltage(adc_val);
 118   1                          delay_ms(30);                   // 等待黑箱电压趋于稳定
 119   1                  adc_val = ADC_Read(0);
 120   1                   v_inf = ADC_ToVoltage(adc_val);
 121   1                                 // === 4. 计算 v_target = v_inf + (v0 - v_inf) * e^(-1) ===
 122   1                     v_target = v_inf + (v0 - v_inf) * 0.368f;
 123   1      
 124   1      
 125   1      
 126   1          // === 5. 再次施加阶跃（重新开始），准备计时 ===
 127   1          Generate_Step_Signal();
 128   1          delay_us(50);               // 给起始电压稳定时间
 129   1      
 130   1          Start_Timer();              // 启动定时器
 131   1          do {
 132   2              adc_val = ADC_Read(0);
 133   2              vt = ADC_ToVoltage(adc_val);
 134   2          } while (fabs(vt - v_target) > 0.02 && Get_Timer_Value() < 60000);
 135   1          Stop_Timer();
 136   1      
 137   1          t_ms = Get_Time_ms();      // 计数器值转换为 ms
 138   1           tau = t_ms;   
 139   1               box_sort()      ;
*** WARNING C209 IN LINE 139 OF MAIN.C: '_box_sort': too few actual parameters
 140   1      }
 141          
 142          void main() {
 143   1              
 144   1          system_init();
 145   1          OLED_Init();//?????OLED
 146   1              OLED_ColorTurn(0);//0?????????1 ??????
 147   1          OLED_DisplayTurn(0);//0??????? 1 ?????????
 148   1               start_project();
 149   1                while (1) {
 150   2              if (keypressed()) {
 151   3                OLED_ShowString(60,2,"hello",16);  // 进入黑箱测试流程
 152   3      //              Start_BlackBox_Test();
 153   3              }
 154   2          }
 155   1      }                  
 156                  
 157           
 158          
 159            
 160                  
 161                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    655    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      36
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
